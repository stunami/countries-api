<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * CountryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
final class CountryRepository extends EntityRepository
{
    private $filterMap = [
        'iso2' => 'c.iso2Code',
        'language' => 'l.code'
    ];

    /**
     * @param array $filters
     * @return array
     */
    public function findByFilters(array $filters)
    {
        $builder = $this->createQueryBuilder('c');
        $builder->leftJoin('c.languages', 'l');
        $builder->leftJoin('c.translations', 't');
        $builder->leftJoin('c.neighbours', 'n');

        $this->addFilterToQuery($builder, $filters, $this->filterMap);

        return $builder->getQuery()->getResult();
    }

    /**
     * @todo Extract all this out to a nice dedicated class
     *
     * @param QueryBuilder $builder
     * @param array $filters
     * @param array $mapping
     */
    private function addFilterToQuery(QueryBuilder $builder, array $filters, array $mapping)
    {
        foreach ($filters as $field => $value) {

            /**
             * Ignore anything that isn't mapped
             */
            if (isset($this->filterMap[$field])) {
                $placeholder = uniqid('placeholder');

                $builder->where(sprintf('%s = :%s', $this->filterMap[$field], $placeholder));
                $builder->setParameter($placeholder, $value);
            }

        }
    }
}
